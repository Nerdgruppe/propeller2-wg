const std = @import("std");
const eval = @import("../eval.zig");

/// contains all pre-defined symbols available in the assembler for Propeller 2.
///
/// These can be found here:
///     https://github.com/totalspectrum/spin2cpp/blob/996a5745ef9c04dbdc7f0e23fc58a9c48852679b/frontends/lexer.c#L3012
///
pub const p2_constants: std.StaticStringMap(eval.Value) = .initComptime(&[_]struct { []const u8, eval.Value }{
    .{ "CHIPVER", .int(2) },

    // .{ "RCFAST", 0x00000001 },
    // .{ "RCSLOW", 0x00000002 },
    // .{ "XINPUT", 0x00000004 },
    // .{ "XTAL1", 0x00000008 },
    // .{ "XTAL2", 0x00000010 },
    // .{ "XTAL3", 0x00000020 },
    // .{ "PLL1X", 0x00000040 },
    // .{ "PLL2X", 0x00000080 },
    // .{ "PLL4X", 0x00000100 },
    // .{ "PLL8X", 0x00000200 },
    // .{ "PLL16X", 0x00000400 },

    // Hardware Registers:
    .{ "IJMP3", .register(0x1F0) }, // 496, INT3 call address
    .{ "IRET3", .register(0x1F1) }, // 497, INT3 return address
    .{ "IJMP2", .register(0x1F2) }, // 498, INT2 call address
    .{ "IRET2", .register(0x1F3) }, // 499, INT2 return address
    .{ "IJMP1", .register(0x1F4) }, // 500, INT1 call address
    .{ "IRET1", .register(0x1F5) }, // 501, INT1 return address
    .{ "PA", .register(0x1F6) }, // 502, Used with CALLPA, CALLD and LOC
    .{ "PB", .register(0x1F7) }, // 503, Used with CALLPB, CALLD and LOC
    .{ "PTRA", .register(0x1F8) }, // 504, Pointer A register
    .{ "PTRB", .register(0x1F9) }, // 505, Pointer B register
    .{ "DIRA", .register(0x1FA) }, // 506, I/O port A direction register
    .{ "DIRB", .register(0x1FB) }, // 507, I/O port B direction register
    .{ "OUTA", .register(0x1FC) }, // 508, I/O port A output register
    .{ "OUTB", .register(0x1FD) }, // 509, I/O port B output register
    .{ "INA", .register(0x1FE) }, // 510, I/O port A input register
    .{ "INB", .register(0x1FF) }, // 511, I/O port B input register

    // Constants:

    .{ "_CLR", .enumerator("CLR") },
    .{ "_NC_AND_NZ", .enumerator("NC_AND_NZ") },
    .{ "_NZ_AND_NC", .enumerator("NZ_AND_NC") },
    .{ "_GT", .enumerator("GT") },
    .{ "_NC_AND_Z", .enumerator("NC_AND_Z") },
    .{ "_Z_AND_NC", .enumerator("Z_AND_NC") },
    .{ "_NC", .enumerator("NC") },
    .{ "_GE", .enumerator("GE") },
    .{ "_C_AND_NZ", .enumerator("C_AND_NZ") },
    .{ "_NZ_AND_C", .enumerator("NZ_AND_C") },
    .{ "_NZ", .enumerator("NZ") },
    .{ "_NE", .enumerator("NE") },
    .{ "_C_NE_Z", .enumerator("C_NE_Z") },
    .{ "_Z_NE_C", .enumerator("Z_NE_C") },
    .{ "_NZ_OR_NC", .enumerator("NZ_OR_NC") },
    .{ "_NC_OR_NZ", .enumerator("NC_OR_NZ") },

    .{ "_C_AND_Z", .enumerator("C_AND_Z") },
    .{ "_Z_AND_C", .enumerator("Z_AND_C") },
    .{ "_C_EQ_Z", .enumerator("C_EQ_Z") },
    .{ "_Z_EQ_C", .enumerator("Z_EQ_C") },
    .{ "_Z", .enumerator("Z") },
    .{ "_E", .enumerator("E") },
    .{ "_Z_OR_NC", .enumerator("Z_OR_NC") },
    .{ "_NC_OR_Z", .enumerator("NC_OR_Z") },
    .{ "_C", .enumerator("C") },
    .{ "_LT", .enumerator("LT") },
    .{ "_C_OR_NZ", .enumerator("C_OR_NZ") },
    .{ "_NZ_OR_C", .enumerator("NZ_OR_C") },
    .{ "_Z_OR_C", .enumerator("Z_OR_C") },
    .{ "_C_OR_Z", .enumerator("C_OR_Z") },
    .{ "_LE", .enumerator("LE") },
    .{ "_SET", .enumerator("SET") },

    // Smart Pins:

    .{ "P_TRUE_A", .int(0) },
    .{ "P_INVERT_A", .int(0x80000000) },
    .{ "P_LOCAL_A", .int(0x0) },
    .{ "P_PLUS1_A", .int(0x10000000) },
    .{ "P_PLUS2_A", .int(0x20000000) },
    .{ "P_PLUS3_A", .int(0x30000000) },
    .{ "P_OUTBIT_A", .int(0x40000000) },
    .{ "P_MINUS3_A", .int(0x50000000) },
    .{ "P_MINUS2_A", .int(0x60000000) },
    .{ "P_MINUS1_A", .int(0x70000000) },
    .{ "P_TRUE_B", .int(0x0) },
    .{ "P_INVERT_B", .int(0x8000000) },
    .{ "P_LOCAL_B", .int(0x0) },
    .{ "P_PLUS1_B", .int(0x1000000) },
    .{ "P_PLUS2_B", .int(0x2000000) },
    .{ "P_PLUS3_B", .int(0x3000000) },
    .{ "P_OUTBIT_B", .int(0x4000000) },
    .{ "P_MINUS3_B", .int(0x5000000) },
    .{ "P_MINUS2_B", .int(0x6000000) },
    .{ "P_MINUS1_B", .int(0x7000000) },
    .{ "P_PASS_AB", .int(0x0) },
    .{ "P_AND_AB", .int(0x200000) },
    .{ "P_OR_AB", .int(0x400000) },
    .{ "P_XOR_AB", .int(0x600000) },
    .{ "P_FILT0_AB", .int(0x800000) },
    .{ "P_FILT1_AB", .int(0xa00000) },
    .{ "P_FILT2_AB", .int(0xc00000) },
    .{ "P_FILT3_AB", .int(0xe00000) },
    .{ "P_LOGIC_A", .int(0x0) },
    .{ "P_LOGIC_A_FB", .int(0x20000) },
    .{ "P_LOGIC_B_FB", .int(0x40000) },
    .{ "P_SCHMITT_A", .int(0x60000) },
    .{ "P_SCHMITT_A_FB", .int(0x80000) },
    .{ "P_SCHMITT_B_FB", .int(0xa0000) },
    .{ "P_COMPARE_AB", .int(0xc0000) },
    .{ "P_COMPARE_AB_FB", .int(0xe0000) },
    .{ "P_ADC_GIO", .int(0x100000) },
    .{ "P_ADC_VIO", .int(0x108000) },
    .{ "P_ADC_FLOAT", .int(0x110000) },
    .{ "P_ADC_1X", .int(0x118000) },
    .{ "P_ADC_3X", .int(0x120000) },
    .{ "P_ADC_10X", .int(0x128000) },
    .{ "P_ADC_30X", .int(0x130000) },
    .{ "P_ADC_100X", .int(0x138000) },
    .{ "P_DAC_990R_3V", .int(0x140000) },
    .{ "P_DAC_600R_2V", .int(0x150000) },
    .{ "P_DAC_124R_3V", .int(0x160000) },
    .{ "P_DAC_75R_2V", .int(0x170000) },
    .{ "P_LEVEL_A", .int(0x180000) },
    .{ "P_LEVEL_A_FBN", .int(0x1a0000) },
    .{ "P_LEVEL_B_FBP", .int(0x1c0000) },
    .{ "P_LEVEL_B_FBN", .int(0x1e0000) },
    .{ "P_ASYNC_IO", .int(0x0) },
    .{ "P_SYNC_IO", .int(0x10000) },
    .{ "P_TRUE_IN", .int(0x0) },
    .{ "P_INVERT_IN", .int(0x8000) },
    .{ "P_TRUE_OUTPUT", .int(0x0) },
    .{ "P_INVERT_OUTPUT", .int(0x4000) },
    .{ "P_HIGH_FAST", .int(0x0) },
    .{ "P_HIGH_1K5", .int(0x800) },
    .{ "P_HIGH_15K", .int(0x1000) },
    .{ "P_HIGH_150K", .int(0x1800) },
    .{ "P_HIGH_1MA", .int(0x2000) },
    .{ "P_HIGH_100UA", .int(0x2800) },
    .{ "P_HIGH_10UA", .int(0x3000) },
    .{ "P_HIGH_FLOAT", .int(0x3800) },
    .{ "P_LOW_FAST", .int(0x0) },
    .{ "P_LOW_1K5", .int(0x100) },
    .{ "P_LOW_15K", .int(0x200) },
    .{ "P_LOW_150K", .int(0x300) },
    .{ "P_LOW_1MA", .int(0x400) },
    .{ "P_LOW_100UA", .int(0x500) },
    .{ "P_LOW_10UA", .int(0x600) },
    .{ "P_LOW_FLOAT", .int(0x700) },
    .{ "P_TT_00", .int(0x0) },
    .{ "P_TT_01", .int(0x40) },
    .{ "P_TT_10", .int(0x80) },
    .{ "P_TT_11", .int(0xc0) },
    .{ "P_OE", .int(0x40) },
    .{ "P_CHANNEL", .int(0x40) },
    .{ "P_BITDAC", .int(0x80) },
    .{ "P_NORMAL", .int(0x0) },
    .{ "P_REPOSITORY", .int(0x2) },
    .{ "P_DAC_NOISE", .int(0x2) },
    .{ "P_DAC_DITHER_RND", .int(0x4) },
    .{ "P_DAC_DITHER_PWM", .int(0x6) },
    .{ "P_PULSE", .int(0x8) },
    .{ "P_TRANSITION", .int(0xa) },
    .{ "P_NCO_FREQ", .int(0xc) },
    .{ "P_NCO_DUTY", .int(0xe) },
    .{ "P_PWM_TRIANGLE", .int(0x10) },
    .{ "P_PWM_SAWTOOTH", .int(0x12) },
    .{ "P_PWM_SMPS", .int(0x14) },
    .{ "P_QUADRATURE", .int(0x16) },
    .{ "P_REG_UP", .int(0x18) },
    .{ "P_REG_UP_DOWN", .int(0x1a) },
    .{ "P_COUNT_RISES", .int(0x1c) },
    .{ "P_COUNT_HIGHS", .int(0x1e) },

    .{ "P_STATE_TICKS", .int(0x20) },
    .{ "P_HIGH_TICKS", .int(0x22) },
    .{ "P_EVENTS_TICKS", .int(0x24) },
    .{ "P_PERIODS_TICKS", .int(0x26) },
    .{ "P_PERIODS_HIGHS", .int(0x28) },
    .{ "P_COUNTER_TICKS", .int(0x2a) },
    .{ "P_COUNTER_HIGHS", .int(0x2c) },
    .{ "P_COUNTER_PERIODS", .int(0x2e) },

    .{ "P_ADC", .int(0x30) },
    .{ "P_ADC_EXT", .int(0x32) },
    .{ "P_ADC_SCOPE", .int(0x34) },
    .{ "P_USB_PAIR", .int(0x36) },
    .{ "P_SYNC_TX", .int(0x38) },
    .{ "P_SYNC_RX", .int(0x3a) },
    .{ "P_ASYNC_TX", .int(0x3c) },
    .{ "P_ASYNC_RX", .int(0x3e) },

    .{ "X_IMM_32X1_LUT", .int(0x0000 << 16) },
    .{ "X_IMM_16X2_LUT", .int(0x1000 << 16) },
    .{ "X_IMM_8X4_LUT", .int(0x2000 << 16) },
    .{ "X_IMM_4X8_LUT", .int(0x3000 << 16) },

    .{ "X_IMM_32X1_1DAC1", .int(0x4000 << 16) },
    .{ "X_IMM_16X2_2DAC1", .int(0x5000 << 16) },
    .{ "X_IMM_16X2_1DAC2", .int(0x5002 << 16) },
    .{ "X_IMM_8X4_4DAC1", .int(0x6000 << 16) },
    .{ "X_IMM_8X4_2DAC2", .int(0x6002 << 16) },
    .{ "X_IMM_8X4_1DAC4", .int(0x6004 << 16) },

    .{ "X_IMM_4X8_4DAC2", .int(0x6006 << 16) },
    .{ "X_IMM_4X8_2DAC4", .int(0x6007 << 16) },
    .{ "X_IMM_4X8_1DAC8", .int(0x600e << 16) },
    .{ "X_IMM_2X16_4DAC4", .int(0x600f << 16) },

    .{ "X_IMM_2X16_2DAC8", .int(0x7000 << 16) },
    .{ "X_IMM_1X32_4DAC8", .int(0x7001 << 16) },

    .{ "X_RFLONG_32X1_LUT", .int(0x7002 << 16) },
    .{ "X_RFLONG_16X2_LUT", .int(0x7004 << 16) },
    .{ "X_RFLONG_8X4_LUT", .int(0x7006 << 16) },
    .{ "X_RFLONG_4X8_LUT", .int(0x7008 << 16) },

    .{ "X_RFBYTE_1P_1DAC1", .int(0x8000 << 16) },
    .{ "X_RFBYTE_2P_2DAC1", .int(0x9000 << 16) },
    .{ "X_RFBYTE_2P_1DAC2", .int(0x9002 << 16) },
    .{ "X_RFBYTE_4P_4DAC1", .int(0xa000 << 16) },
    .{ "X_RFBYTE_4P_2DAC2", .int(0xa002 << 16) },
    .{ "X_RFBYTE_4P_1DAC4", .int(0xa004 << 16) },
    .{ "X_RFBYTE_8P_4DAC2", .int(0xa006 << 16) },
    .{ "X_RFBYTE_8P_2DAC4", .int(0xa007 << 16) },
    .{ "X_RFBYTE_8P_1DAC8", .int(0xa00e << 16) },
    .{ "X_RFWORD_16P_4DAC4", .int(0xa00f << 16) },
    .{ "X_RFWORD_16P_2DAC8", .int(0xb000 << 16) },
    .{ "X_RFLONG_32P_4DAC8", .int(0xb001 << 16) },

    .{ "X_RFBYTE_LUMA8", .int(0xb002 << 16) },
    .{ "X_RFBYTE_RGBI8", .int(0xb003 << 16) },
    .{ "X_RFBYTE_RGB8", .int(0xb004 << 16) },
    .{ "X_RFWORD_RGB16", .int(0xb005 << 16) },
    .{ "X_RFLONG_RGB24", .int(0xb006 << 16) },

    .{ "X_1P_1DAC1_WFBYTE", .int(0xc000 << 16) },
    .{ "X_2P_2DAC1_WFBYTE", .int(0xd000 << 16) },
    .{ "X_2P_1DAC2_WFBYTE", .int(0xd002 << 16) },

    .{ "X_4P_4DAC1_WFBYTE", .int(0xe000 << 16) },
    .{ "X_4P_2DAC2_WFBYTE", .int(0xe002 << 16) },
    .{ "X_4P_1DAC4_WFBYTE", .int(0xe004 << 16) },

    .{ "X_8P_4DAC2_WFBYTE", .int(0xe006 << 16) },
    .{ "X_8P_2DAC4_WFBYTE", .int(0xe007 << 16) },
    .{ "X_8P_1DAC8_WFBYTE", .int(0xe00e << 16) },

    .{ "X_16P_4DAC4_WFWORD", .int(0xe00f << 16) },
    .{ "X_16P_2DAC8_WFWORD", .int(0xf000 << 16) },
    .{ "X_32P_4DAC8_WFLONG", .int(0xf001 << 16) },

    .{ "X_1ADC8_0P_1DAC8_WFBYTE", .int(0xf002 << 16) },
    .{ "X_1ADC8_8P_2DAC8_WFWORD", .int(0xf003 << 16) },
    .{ "X_2ADC8_0P_2DAC8_WFWORD", .int(0xf004 << 16) },
    .{ "X_2ADC8_16P_4DAC8_WFLONG", .int(0xf005 << 16) },
    .{ "X_4ADC8_0P_4DAC8_WFLONG", .int(0xf006 << 16) },

    .{ "X_DDS_GOERTZEL_SINC1", .int(0xf007 << 16) },
    .{ "X_DDS_GOERTZEL_SINC2", .int(0xf087 << 16) },

    .{ "X_DACS_OFF", .int(0x0000 << 16) },
    .{ "X_DACS_0_0_0_0", .int(0x0100 << 16) },
    .{ "X_DACS_X_X_0_0", .int(0x0200 << 16) },
    .{ "X_DACS_0_0_X_X", .int(0x0300 << 16) },
    .{ "X_DACS_X_X_X_0", .int(0x0400 << 16) },
    .{ "X_DACS_X_X_0_X", .int(0x0500 << 16) },
    .{ "X_DACS_X_0_X_X", .int(0x0600 << 16) },
    .{ "X_DACS_0_X_X_X", .int(0x0700 << 16) },

    .{ "X_DACS_0N0_0N0", .int(0x0800 << 16) },
    .{ "X_DACS_X_X_0N0", .int(0x0900 << 16) },
    .{ "X_DACS_0N0_X_X", .int(0x0a00 << 16) },
    .{ "X_DACS_1_0_1_0", .int(0x0b00 << 16) },
    .{ "X_DACS_X_X_1_0", .int(0x0c00 << 16) },
    .{ "X_DACS_1_0_X_X", .int(0x0d00 << 16) },
    .{ "X_DACS_1N1_0N0", .int(0x0e00 << 16) },
    .{ "X_DACS_3_2_1_0", .int(0x0f00 << 16) },

    .{ "X_PINS_OFF", .int(0x0000 << 16) },
    .{ "X_PINS_ON", .int(0x0080 << 16) },
    .{ "X_WRITE_OFF", .int(0x0000 << 16) },
    .{ "X_WRITE_ON", .int(0x0080 << 16) },
    .{ "X_ALT_OFF", .int(0x0000 << 16) },
    .{ "X_ALT_ON", .int(0x0001 << 16) },

    .{ "COGEXEC", .int(0) },
    .{ "COGEXEC_NEW", .int(0x10) },
    .{ "HUBEXEC", .int(0x20) },
    .{ "HUBEXEC_NEW", .int(0x30) },
    .{ "COGEXEC_NEW_PAIR", .int(0x11) },
    .{ "HUBEXEC_NEW_PAIR", .int(0x31) },

    .{ "NEWCOG", .int(0x10) },

    .{ "EVENT_INT", .int(0) },
    .{ "INT_OFF", .int(0) },
    .{ "EVENT_CT1", .int(1) },
    .{ "EVENT_CT2", .int(2) },
    .{ "EVENT_CT3", .int(3) },
    .{ "EVENT_SE1", .int(4) },
    .{ "EVENT_SE2", .int(5) },
    .{ "EVENT_SE3", .int(6) },
    .{ "EVENT_SE4", .int(7) },

    .{ "EVENT_PAT", .int(8) },
    .{ "EVENT_FBW", .int(9) },
    .{ "EVENT_XMT", .int(10) },
    .{ "EVENT_XFI", .int(11) },
    .{ "EVENT_XRO", .int(12) },
    .{ "EVENT_XRL", .int(13) },
    .{ "EVENT_ATN", .int(14) },
    .{ "EVENT_QMT", .int(15) },
});

pub const modcz_items: std.StaticStringMap(u32) = .initComptime(.{
    .{ "CLR", 0x0 },
    .{ "NC_AND_NZ", 0x1 },
    .{ "NZ_AND_NC", 0x1 },
    .{ "GT", 0x1 },
    .{ "NC_AND_Z", 0x2 },
    .{ "Z_AND_NC", 0x2 },
    .{ "NC", 0x3 },
    .{ "GE", 0x3 },
    .{ "C_AND_NZ", 0x4 },
    .{ "NZ_AND_C", 0x4 },
    .{ "NZ", 0x5 },
    .{ "NE", 0x5 },
    .{ "C_NE_Z", 0x6 },
    .{ "Z_NE_C", 0x6 },
    .{ "NZ_OR_NC", 0x7 },
    .{ "NC_OR_NZ", 0x7 },

    .{ "C_AND_Z", 0x8 },
    .{ "Z_AND_C", 0x8 },
    .{ "C_EQ_Z", 0x9 },
    .{ "Z_EQ_C", 0x9 },
    .{ "Z", 0xA },
    .{ "E", 0xA },
    .{ "Z_OR_NC", 0xB },
    .{ "NC_OR_Z", 0xB },
    .{ "C", 0xC },
    .{ "LT", 0xC },
    .{ "C_OR_NZ", 0xD },
    .{ "NZ_OR_C", 0xD },
    .{ "Z_OR_C", 0xE },
    .{ "C_OR_Z", 0xE },
    .{ "LE", 0xE },
    .{ "SET", 0xF },
});
